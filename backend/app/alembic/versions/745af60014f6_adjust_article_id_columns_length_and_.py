"""adjust article_id columns length and fixes foreign key constraints

Revision ID: 745af60014f6
Revises: 696aaa0c906a
Create Date: 2023-11-22 13:42:40.960570

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "745af60014f6"
down_revision = "696aaa0c906a"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "issue_article",
        "article_id",
        existing_type=sa.VARCHAR(length=32),
        type_=sa.String(length=36),
        existing_nullable=False,
    )
    op.drop_constraint("token_cost_article_id_fkey", "token_cost", type_="foreignkey")
    op.drop_constraint("issue_article_article_id_key", "issue_article", type_="unique")
    op.alter_column(
        "token_cost",
        "article_id",
        existing_type=sa.VARCHAR(length=32),
        type_=sa.String(length=36),
        existing_nullable=False,
    )
    op.drop_constraint("token_cost_issue_id_fkey", "token_cost", type_="foreignkey")
    op.create_foreign_key(
        None,
        "token_cost",
        "issue_article",
        ["issue_id", "article_id"],
        ["issue_id", "article_id"],
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "token_cost", type_="foreignkey")
    op.create_foreign_key(
        "token_cost_issue_id_fkey",
        "token_cost",
        "newsletter_issue",
        ["issue_id"],
        ["issue_id"],
    )

    # Recreate the token_cost_article_id_fkey constraint on the token_cost table
    op.create_foreign_key(
        "token_cost_article_id_fkey",
        "token_cost",
        "issue_article",
        ["article_id"],
        ["article_id"],
    )

    op.alter_column(
        "token_cost",
        "article_id",
        existing_type=sa.String(length=36),
        type_=sa.VARCHAR(length=32),
        existing_nullable=False,
    )

    # Recreate the issue_article_article_id_key constraint on the issue_article table
    op.create_unique_constraint(
        "issue_article_article_id_key", "issue_article", ["article_id"]
    )

    op.alter_column(
        "issue_article",
        "article_id",
        existing_type=sa.String(length=36),
        type_=sa.VARCHAR(length=32),
        existing_nullable=False,
    )
    # ### end Alembic commands ###
